;; Analyzed by ClojureScript 0.0-3211
{:use-macros {defna cljs.core.logic, defnu cljs.core.logic, fresh cljs.core.logic, defne cljs.core.logic, -inc cljs.core.logic, == cljs.core.logic}, :excludes #{==}, :name cljs.core.logic, :imports nil, :requires {clojure.walk clojure.walk, clojure.set clojure.set, set clojure.set}, :uses {postwalk clojure.walk}, :defs {choice {:protocol-inline nil, :meta {:arglists (quote ([a f])), :end-column 13, :end-line 598, :column 7, :line 598, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/choice, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 13, :method-params ([a f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 598, :end-line 598, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a f])), :test true}, unifier {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 2, :method-params ([u w]), :arglists ([u w] [u w & ts]), :arglists-meta (nil nil)}, :arglists (quote ([u w] [u w & ts])), :doc "Unify the terms u and w. Will prep the terms.", :end-column 14, :end-line 913, :column 7, :line 913, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/unifier, :variadic true, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([u w]), :arglists ([u w] [u w & ts]), :arglists-meta (nil nil)}, :method-params ([u w]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 913, :end-line 913, :max-fixed-arity 2, :fn-var true, :arglists ([u w] [u w & ts]), :doc "Unify the terms u and w. Will prep the terms.", :test true}, appendo {:protocol-inline nil, :meta {:doc "A relation where x, y, and z are proper collections, \n  such that z is x appended to y", :end-column 15, :end-line 743, :column 8, :line 743, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/appendo, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 15, :method-params ([x y z]), :protocol-impl nil, :arglists-meta (), :column 1, :line 743, :end-line 743, :max-fixed-arity 3, :fn-var true, :arglists nil, :doc "A relation where x, y, and z are proper collections, \n  such that z is x appended to y", :test true}, lvarq-sym? {:protocol-inline nil, :meta {:arglists (quote ([s])), :private true, :end-column 18, :end-line 828, :column 8, :line 828, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :private true, :name cljs.core.logic/lvarq-sym?, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 828, :end-line 828, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, take* {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 12, :end-line 580, :column 7, :line 580, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/take*, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 580, :end-line 580, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, -walk-term {:protocol-inline nil, :meta {:arglists (quote ([v s])), :doc nil, :protocol cljs.core.logic/IWalkTerm, :end-column 14, :end-line 35, :column 4, :line 35, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IWalkTerm, :name cljs.core.logic/-walk-term, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 14, :method-params ([v s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v s])), :doc nil, :test true}, assq {:protocol-inline nil, :meta {:arglists (quote ([k xs])), :doc "Similar to Scheme assq, xs must be a List of Pairs", :end-column 11, :end-line 103, :column 7, :line 103, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/assq, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 11, :method-params ([k xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k xs])), :doc "Similar to Scheme assq, xs must be a List of Pairs", :test true}, LCons {:meta {:declared true, :end-column 15, :end-line 276, :column 10, :line 276, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :num-fields 3, :protocols #{cljs.core/IEquiv cljs.core.logic/IUnifyWithObject cljs.core.logic/IUnifyWithNil cljs.core.logic/IUnifyWithLSeq cljs.core.logic/IUnifyTerms cljs.core/IMeta cljs.core.logic/IWalkTerm cljs.core.logic/LConsSeq cljs.core.logic/IOccursCheckTerm cljs.core.logic/IReifyTerm cljs.core/IPrintWithWriter cljs.core.logic/IUnifyWithSequential cljs.core.logic/IUnifyWithMap cljs.core/IWithMeta}, :name cljs.core.logic/LCons, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 15, :type true, :column 10, :line 291, :record false, :declared true, :end-line 291, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core/IWithMeta}, :test true}, ->Fail {:protocol-inline nil, :meta {:arglists (quote ([a])), :factory :positional, :skip-protocol-flag nil, :protocols #{cljs.core.logic/ITake cljs.core.logic/IBind cljs.core.logic/IMPlus}, :end-column 14, :end-line 621, :column 10, :line 621, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocols #{cljs.core.logic/ITake cljs.core.logic/IBind cljs.core.logic/IMPlus}, :name cljs.core.logic/->Fail, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 14, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 621, :end-line 621, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :skip-protocol-flag nil, :test true}, -unify-with-map {:protocol-inline nil, :meta {:arglists (quote ([v u s])), :doc nil, :protocol cljs.core.logic/IUnifyWithMap, :end-column 19, :end-line 29, :column 4, :line 29, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IUnifyWithMap, :name cljs.core.logic/-unify-with-map, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 19, :method-params ([v u s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v u s])), :doc nil, :test true}, LConsSeq {:meta {:protocol-info {:methods {-lfirst [[this]], -lnext [[this]]}}, :protocol-symbol true, :doc nil, :end-column 22, :end-line 272, :column 14, :line 272, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/LConsSeq, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 22, :column 1, :line 272, :protocol-info {:methods {-lfirst [[this]], -lnext [[this]]}}, :info nil, :end-line 272, :impls #{cljs.core.logic/LCons}, :doc nil, :test true}, -reify* {:protocol-inline nil, :meta {:arglists (quote ([this v])), :doc nil, :protocol cljs.core.logic/ISubstitutions, :end-column 11, :end-line 96, :column 4, :line 96, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/ISubstitutions, :name cljs.core.logic/-reify*, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 11, :method-params ([this v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this v])), :doc nil, :test true}, lvar-sym-counter {:meta {:end-column 22, :end-line 261, :column 6, :line 261, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :line 261, :column 1, :end-line 261, :end-column 22, :test true, :name cljs.core.logic/lvar-sym-counter}, failed? {:protocol-inline nil, :meta {:arglists (quote ([x])), :tag boolean, :end-column 23, :end-line 278, :column 16, :line 278, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/failed?, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 23, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :ret-tag boolean, :end-line 278, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :test true}, Fail {:meta {:declared true, :end-column 20, :end-line 276, :column 16, :line 276, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :num-fields 1, :protocols #{cljs.core.logic/ITake cljs.core.logic/IBind cljs.core.logic/IMPlus}, :name cljs.core.logic/Fail, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 14, :type true, :column 10, :line 621, :record false, :declared true, :end-line 621, :skip-protocol-flag nil, :test true}, empty-s {:meta {:tag not-native, :end-column 25, :end-line 196, :column 18, :line 196, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :line 196, :column 1, :end-line 196, :end-column 25, :tag not-native, :test true, :name cljs.core.logic/empty-s}, lcons-pr-seq {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 19, :end-line 284, :column 7, :line 284, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/lcons-pr-seq, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 284, :end-line 284, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, -ext-no-check {:protocol-inline nil, :meta {:arglists (quote ([this u v])), :doc nil, :protocol cljs.core.logic/ISubstitutions, :end-column 17, :end-line 91, :column 4, :line 91, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/ISubstitutions, :name cljs.core.logic/-ext-no-check, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 17, :method-params ([this u v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 91, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this u v])), :doc nil, :test true}, -unify-terms {:protocol-inline nil, :meta {:arglists (quote ([u v s])), :doc nil, :protocol cljs.core.logic/IUnifyTerms, :end-column 16, :end-line 11, :column 4, :line 11, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IUnifyTerms, :name cljs.core.logic/-unify-terms, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 16, :method-params ([u v s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([u v s])), :doc nil, :test true}, partial-map {:protocol-inline nil, :meta {:arglists (quote ([m])), :doc "Given map m, returns partial map that unifies with maps even if it doesn't share all of the keys of that map.\n   Only the keys of the partial map will be unified:\n\n   (m/run* [q]\n         (m/fresh [pm x]\n                (m/== pm (partial-map {:a x}))\n                (m/== pm {:a 1 :b 2})\n                (m/== pm q)))\n   ;;=> ({:a 1})", :end-column 18, :end-line 812, :column 7, :line 812, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/partial-map, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 18, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 812, :end-line 812, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :doc "Given map m, returns partial map that unifies with maps even if it doesn't share all of the keys of that map.\n   Only the keys of the partial map will be unified:\n\n   (m/run* [q]\n         (m/fresh [pm x]\n                (m/== pm (partial-map {:a x}))\n                (m/== pm {:a 1 :b 2})\n                (m/== pm q)))\n   ;;=> ({:a 1})", :test true}, -occurs-check-term {:protocol-inline nil, :meta {:arglists (quote ([v x s])), :doc nil, :protocol cljs.core.logic/IOccursCheckTerm, :end-column 22, :end-line 38, :column 4, :line 38, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IOccursCheckTerm, :name cljs.core.logic/-occurs-check-term, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 22, :method-params ([v x s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v x s])), :doc nil, :test true}, *logic-dbs* {:meta {:dynamic true, :end-column 27, :end-line 8, :column 16, :line 8, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :line 8, :column 1, :end-line 8, :end-column 27, :dynamic true, :test true, :name cljs.core.logic/*logic-dbs*}, ISubstitutions {:meta {:protocol-info {:methods {-reify* [[this v]], -ext-no-check [[this u v]], -ext [[this u v]], -walk [[this v]], -unify [[this u v]], -walk* [[this v]], -reify [[this v]], -occurs-check [[this u v]], -reify-lvar-name [[_]]}}, :protocol-symbol true, :doc nil, :end-column 28, :end-line 88, :column 14, :line 88, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/ISubstitutions, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 28, :column 1, :line 88, :protocol-info {:methods {-reify* [[this v]], -ext-no-check [[this u v]], -ext [[this u v]], -walk [[this v]], -unify [[this u v]], -walk* [[this v]], -reify [[this v]], -occurs-check [[this u v]], -reify-lvar-name [[_]]}}, :info nil, :end-line 88, :impls #{cljs.core.logic/Substitutions}, :doc nil, :test true}, LVar {:meta {:declared true, :end-column 14, :end-line 83, :column 10, :line 83, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :num-fields 2, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core.logic/IUnifyWithObject cljs.core.logic/IUnifyWithNil cljs.core.logic/IUnifyWithLSeq cljs.core.logic/IUnifyTerms cljs.core/IMeta cljs.core.logic/IWalkTerm cljs.core.logic/IOccursCheckTerm cljs.core.logic/IReifyTerm cljs.core.logic/IUnifyWithLVar cljs.core.logic/Object cljs.core/IPrintWithWriter cljs.core.logic/IUnifyWithSequential cljs.core.logic/IUnifyWithMap cljs.core/IWithMeta}, :name cljs.core.logic/LVar, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 14, :type true, :column 10, :line 210, :record false, :declared true, :end-line 210, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core/IWithMeta}, :test true}, unify-with-map* {:protocol-inline nil, :meta {:arglists (quote ([v u s])), :end-column 22, :end-line 477, :column 7, :line 477, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/unify-with-map*, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 22, :method-params ([v u s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 477, :end-line 477, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v u s])), :test true}, Pair {:num-fields 2, :protocols #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/ICounted cljs.core/IPrintWithWriter}, :name cljs.core.logic/Pair, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 14, :type true, :column 10, :line 55, :record false, :end-line 55, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/ICounted cljs.core/IPrintWithWriter}}, make-s {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [s c]), :arglists ([s] [s c]), :arglists-meta (nil nil)}, :arglists (quote ([s] [s c])), :end-column 13, :end-line 190, :column 7, :line 190, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/make-s, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [s c]), :arglists ([s] [s c]), :arglists-meta (nil nil)}, :method-params ([s] [s c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 2, :fn-var true, :arglists ([s] [s c]), :test true}, Inc {:meta {:declared true, :end-column 13, :end-line 585, :column 10, :line 585, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :num-fields 1, :protocols #{cljs.core.logic/ITake cljs.core/IFn cljs.core.logic/IBind cljs.core.logic/IMPlus}, :name cljs.core.logic/Inc, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 13, :type true, :column 10, :line 604, :record false, :declared true, :end-line 604, :skip-protocol-flag #{cljs.core/IFn}, :test true}, lcons? {:protocol-inline nil, :meta {:arglists (quote ([x])), :tag boolean, :end-column 22, :end-line 281, :column 16, :line 281, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/lcons?, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :ret-tag boolean, :end-line 281, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :test true}, IUnifyWithMap {:meta {:protocol-info {:methods {-unify-with-map [[v u s]]}}, :protocol-symbol true, :doc nil, :end-column 27, :end-line 28, :column 14, :line 28, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IUnifyWithMap, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 27, :column 1, :line 28, :protocol-info {:methods {-unify-with-map [[v u s]]}}, :info nil, :end-line 28, :impls #{nil cljs.core/PersistentHashMap cljs.core/PersistentArrayMap cljs.core.logic/PMap default cljs.core.logic/LVar cljs.core.logic/LCons}, :doc nil, :test true}, emptyo {:protocol-inline nil, :meta {:arglists (quote ([a])), :doc "A relation where a is the empty list", :end-column 13, :end-line 710, :column 7, :line 710, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/emptyo, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 13, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 710, :end-line 710, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :doc "A relation where a is the empty list", :test true}, -lnext {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol cljs.core.logic/LConsSeq, :end-column 10, :end-line 274, :column 4, :line 274, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/LConsSeq, :name cljs.core.logic/-lnext, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 274, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, lvar {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [name]), :arglists ([] [name]), :arglists-meta (nil nil)}, :arglists (quote ([] [name])), :end-column 11, :end-line 263, :column 7, :line 263, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/lvar, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [name]), :arglists ([] [name]), :arglists-meta (nil nil)}, :method-params ([] [name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 263, :end-line 263, :max-fixed-arity 1, :fn-var true, :arglists ([] [name]), :test true}, ITake {:meta {:protocol-info {:methods {-take* [[a]]}}, :protocol-symbol true, :doc nil, :end-column 19, :end-line 49, :column 14, :line 49, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/ITake, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 19, :column 1, :line 49, :protocol-info {:methods {-take* [[a]]}}, :info nil, :end-line 49, :impls #{cljs.core.logic/Choice cljs.core.logic/Substitutions cljs.core.logic/Fail cljs.core.logic/Inc}, :doc nil, :test true}, unify {:protocol-inline nil, :meta {:arglists (quote ([s u v])), :end-column 12, :end-line 880, :column 7, :line 880, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/unify, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 12, :method-params ([s u v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 880, :end-line 880, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s u v])), :test true}, to-stream {:protocol-inline nil, :meta {:arglists (quote ([aseq])), :end-column 16, :end-line 936, :column 7, :line 936, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/to-stream, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 16, :method-params ([aseq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 936, :end-line 936, :max-fixed-arity 1, :fn-var true, :arglists (quote ([aseq])), :test true}, s# {:meta {:end-column 8, :end-line 640, :column 6, :line 640, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :line 640, :column 1, :end-line 640, :end-column 8, :test true, :name cljs.core.logic/s#}, ->Substitutions {:protocol-inline nil, :meta {:arglists (quote ([s c _meta])), :factory :positional, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core/IWithMeta}, :protocols #{cljs.core.logic/ITake cljs.core/IEquiv cljs.core.logic/IBind cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core.logic/IMPlus cljs.core/IWithMeta cljs.core.logic/ISubstitutions}, :end-column 23, :end-line 115, :column 10, :line 115, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocols #{cljs.core.logic/ITake cljs.core/IEquiv cljs.core.logic/IBind cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core.logic/IMPlus cljs.core/IWithMeta cljs.core.logic/ISubstitutions}, :name cljs.core.logic/->Substitutions, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 23, :method-params ([s c _meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 115, :end-line 115, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s c _meta])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core/IWithMeta}, :test true}, -unify-with-lvar {:protocol-inline nil, :meta {:arglists (quote ([v u s])), :doc nil, :protocol cljs.core.logic/IUnifyWithLVar, :end-column 20, :end-line 20, :column 4, :line 20, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IUnifyWithLVar, :name cljs.core.logic/-unify-with-lvar, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 20, :method-params ([v u s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v u s])), :doc nil, :test true}, IBuildTerm {:meta {:protocol-info {:methods {-build-term [[u s]]}}, :protocol-symbol true, :doc nil, :end-column 24, :end-line 40, :column 14, :line 40, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IBuildTerm, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 24, :column 1, :line 40, :protocol-info {:methods {-build-term [[u s]]}}, :info nil, :end-line 40, :impls #{}, :doc nil, :test true}, -ext {:protocol-inline nil, :meta {:arglists (quote ([this u v])), :doc nil, :protocol cljs.core.logic/ISubstitutions, :end-column 8, :end-line 90, :column 4, :line 90, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/ISubstitutions, :name cljs.core.logic/-ext, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 8, :method-params ([this u v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 90, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this u v])), :doc nil, :test true}, replace-lvar {:protocol-inline nil, :meta {:arglists (quote ([store])), :private true, :end-column 20, :end-line 843, :column 8, :line 843, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :private true, :name cljs.core.logic/replace-lvar, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 20, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 843, :end-line 843, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store])), :test true}, -walk {:protocol-inline nil, :meta {:arglists (quote ([this v])), :doc nil, :protocol cljs.core.logic/ISubstitutions, :end-column 9, :end-line 92, :column 4, :line 92, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/ISubstitutions, :name cljs.core.logic/-walk, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 9, :method-params ([this v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 92, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this v])), :doc nil, :test true}, binding-map* {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 2, :method-params ([u w]), :arglists ([u w] [u w & ts]), :arglists-meta (nil nil)}, :arglists (quote ([u w] [u w & ts])), :doc "Return the binding map that unifies terms u and w.\n  u and w should prepped terms.", :end-column 19, :end-line 899, :column 7, :line 899, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/binding-map*, :variadic true, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([u w]), :arglists ([u w] [u w & ts]), :arglists-meta (nil nil)}, :method-params ([u w]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 899, :end-line 899, :max-fixed-arity 2, :fn-var true, :arglists ([u w] [u w & ts]), :doc "Return the binding map that unifies terms u and w.\n  u and w should prepped terms.", :test true}, IOccursCheckTerm {:meta {:protocol-info {:methods {-occurs-check-term [[v x s]]}}, :protocol-symbol true, :doc nil, :end-column 30, :end-line 37, :column 14, :line 37, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IOccursCheckTerm, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 30, :column 1, :line 37, :protocol-info {:methods {-occurs-check-term [[v x s]]}}, :info nil, :end-line 37, :impls #{nil default cljs.core.logic/LVar cljs.core.logic/LCons}, :doc nil, :test true}, prep* {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 4, :method-params ([expr store] [expr store lcons?] [expr store lcons? last?]), :arglists ([expr store] [expr store lcons?] [expr store lcons? last?]), :arglists-meta (nil nil nil)}, :arglists (quote ([expr store] [expr store lcons?] [expr store lcons? last?])), :private true, :end-column 13, :end-line 851, :column 8, :line 851, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :private true, :name cljs.core.logic/prep*, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([expr store] [expr store lcons?] [expr store lcons? last?]), :arglists ([expr store] [expr store lcons?] [expr store lcons? last?]), :arglists-meta (nil nil nil)}, :method-params ([expr store] [expr store lcons?] [expr store lcons? last?]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 851, :end-line 851, :max-fixed-arity 4, :fn-var true, :arglists ([expr store] [expr store lcons?] [expr store lcons? last?]), :test true}, lcons-expr? {:protocol-inline nil, :meta {:arglists (quote ([expr])), :private true, :end-column 19, :end-line 838, :column 8, :line 838, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :private true, :name cljs.core.logic/lcons-expr?, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 19, :method-params ([expr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 838, :end-line 838, :max-fixed-arity 1, :fn-var true, :arglists (quote ([expr])), :test true}, IBind {:meta {:protocol-info {:methods {-bind [[this g]]}}, :protocol-symbol true, :doc nil, :end-column 19, :end-line 43, :column 14, :line 43, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IBind, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 19, :column 1, :line 43, :protocol-info {:methods {-bind [[this g]]}}, :info nil, :end-line 43, :impls #{cljs.core.logic/Choice cljs.core.logic/Substitutions cljs.core.logic/Fail cljs.core.logic/Inc}, :doc nil, :test true}, ->Pair {:protocol-inline nil, :meta {:arglists (quote ([lhs rhs])), :factory :positional, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/ICounted cljs.core/IPrintWithWriter}, :protocols #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/ICounted cljs.core/IPrintWithWriter}, :end-column 14, :end-line 55, :column 10, :line 55, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocols #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/ICounted cljs.core/IPrintWithWriter}, :name cljs.core.logic/->Pair, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 14, :method-params ([lhs rhs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lhs rhs])), :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/ICounted cljs.core/IPrintWithWriter}, :test true}, lcons {:protocol-inline nil, :meta {:arglists (quote ([a d])), :doc "Constructs a sequence a with an improper tail d if d is a logic variable.", :end-column 12, :end-line 367, :column 7, :line 367, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/lcons, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 12, :method-params ([a d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 367, :end-line 367, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a d])), :doc "Constructs a sequence a with an improper tail d if d is a logic variable.", :test true}, -ifu {:protocol-inline nil, :meta {:arglists (quote ([b gs c])), :doc nil, :protocol cljs.core.logic/IIfU, :end-column 8, :end-line 651, :column 4, :line 651, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IIfU, :name cljs.core.logic/-ifu, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 8, :method-params ([b gs c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 650, :end-line 651, :max-fixed-arity 3, :fn-var true, :arglists (quote ([b gs c])), :doc nil, :test true}, unify-with-pmap {:protocol-inline nil, :meta {:arglists (quote ([pmap u s])), :doc nil, :protocol cljs.core.logic/IUnifyWithPMap, :end-column 19, :end-line 760, :column 4, :line 760, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IUnifyWithPMap, :name cljs.core.logic/unify-with-pmap, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 19, :method-params ([pmap u s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 759, :end-line 760, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pmap u s])), :doc nil, :test true}, -unify {:protocol-inline nil, :meta {:arglists (quote ([this u v])), :doc nil, :protocol cljs.core.logic/ISubstitutions, :end-column 10, :end-line 94, :column 4, :line 94, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/ISubstitutions, :name cljs.core.logic/-unify, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 10, :method-params ([this u v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 94, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this u v])), :doc nil, :test true}, -walk* {:protocol-inline nil, :meta {:arglists (quote ([this v])), :doc nil, :protocol cljs.core.logic/ISubstitutions, :end-column 10, :end-line 93, :column 4, :line 93, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/ISubstitutions, :name cljs.core.logic/-walk*, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 10, :method-params ([this v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 93, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this v])), :doc nil, :test true}, ->LCons {:protocol-inline nil, :meta {:arglists (quote ([a d meta])), :factory :positional, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core/IWithMeta}, :protocols #{cljs.core/IEquiv cljs.core.logic/IUnifyWithObject cljs.core.logic/IUnifyWithNil cljs.core.logic/IUnifyWithLSeq cljs.core.logic/IUnifyTerms cljs.core/IMeta cljs.core.logic/IWalkTerm cljs.core.logic/LConsSeq cljs.core.logic/IOccursCheckTerm cljs.core.logic/IReifyTerm cljs.core/IPrintWithWriter cljs.core.logic/IUnifyWithSequential cljs.core.logic/IUnifyWithMap cljs.core/IWithMeta}, :end-column 15, :end-line 291, :column 10, :line 291, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocols #{cljs.core/IEquiv cljs.core.logic/IUnifyWithObject cljs.core.logic/IUnifyWithNil cljs.core.logic/IUnifyWithLSeq cljs.core.logic/IUnifyTerms cljs.core/IMeta cljs.core.logic/IWalkTerm cljs.core.logic/LConsSeq cljs.core.logic/IOccursCheckTerm cljs.core.logic/IReifyTerm cljs.core/IPrintWithWriter cljs.core.logic/IUnifyWithSequential cljs.core.logic/IUnifyWithMap cljs.core/IWithMeta}, :name cljs.core.logic/->LCons, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 15, :method-params ([a d meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 291, :end-line 291, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a d meta])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core/IWithMeta}, :test true}, -build-term {:protocol-inline nil, :meta {:arglists (quote ([u s])), :doc nil, :protocol cljs.core.logic/IBuildTerm, :end-column 15, :end-line 41, :column 4, :line 41, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IBuildTerm, :name cljs.core.logic/-build-term, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 15, :method-params ([u s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([u s])), :doc nil, :test true}, IUnifyWithLVar {:meta {:protocol-info {:methods {-unify-with-lvar [[v u s]]}}, :protocol-symbol true, :doc nil, :end-column 28, :end-line 19, :column 14, :line 19, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IUnifyWithLVar, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 28, :column 1, :line 19, :protocol-info {:methods {-unify-with-lvar [[v u s]]}}, :info nil, :end-line 19, :impls #{nil cljs.core.logic/PMap default cljs.core.logic/LVar}, :doc nil, :test true}, IMPlus {:meta {:protocol-info {:methods {-mplus [[a f]]}}, :protocol-symbol true, :doc nil, :end-column 20, :end-line 46, :column 14, :line 46, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IMPlus, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 20, :column 1, :line 46, :protocol-info {:methods {-mplus [[a f]]}}, :info nil, :end-line 46, :impls #{cljs.core.logic/Choice cljs.core.logic/Substitutions cljs.core.logic/Fail cljs.core.logic/Inc}, :doc nil, :test true}, -reify {:protocol-inline nil, :meta {:arglists (quote ([this v])), :doc nil, :protocol cljs.core.logic/ISubstitutions, :end-column 10, :end-line 97, :column 4, :line 97, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/ISubstitutions, :name cljs.core.logic/-reify, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 10, :method-params ([this v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this v])), :doc nil, :test true}, IUnifyWithSequential {:meta {:protocol-info {:methods {-unify-with-seq [[v u s]]}}, :protocol-symbol true, :doc nil, :end-column 34, :end-line 25, :column 14, :line 25, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IUnifyWithSequential, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 34, :column 1, :line 25, :protocol-info {:methods {-unify-with-seq [[v u s]]}}, :info nil, :end-line 25, :impls #{nil default cljs.core.logic/LVar cljs.core.logic/LCons}, :doc nil, :test true}, -unify-with-nil {:protocol-inline nil, :meta {:arglists (quote ([v u s])), :doc nil, :protocol cljs.core.logic/IUnifyWithNil, :end-column 19, :end-line 14, :column 4, :line 14, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IUnifyWithNil, :name cljs.core.logic/-unify-with-nil, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 19, :method-params ([v u s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 14, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v u s])), :doc nil, :test true}, pair {:protocol-inline nil, :meta {:arglists (quote ([lhs rhs])), :end-column 11, :end-line 77, :column 7, :line 77, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/pair, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 11, :method-params ([lhs rhs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lhs rhs])), :test true}, -occurs-check {:protocol-inline nil, :meta {:arglists (quote ([this u v])), :doc nil, :protocol cljs.core.logic/ISubstitutions, :end-column 17, :end-line 89, :column 4, :line 89, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/ISubstitutions, :name cljs.core.logic/-occurs-check, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 17, :method-params ([this u v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this u v])), :doc nil, :test true}, map->PMap {:protocol-inline nil, :meta {:arglists (quote ([G__26685])), :factory :map, :internal-ctor true, :end-column 16, :end-line 762, :column 12, :line 762, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/map->PMap, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 16, :method-params ([G__26685]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 762, :end-line 762, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__26685])), :test true}, -reify-term {:protocol-inline nil, :meta {:arglists (quote ([v s])), :doc nil, :protocol cljs.core.logic/IReifyTerm, :end-column 15, :end-line 32, :column 4, :line 32, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IReifyTerm, :name cljs.core.logic/-reify-term, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 15, :method-params ([v s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v s])), :doc nil, :test true}, ->LVar {:protocol-inline nil, :meta {:arglists (quote ([name meta])), :factory :positional, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core/IWithMeta}, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core.logic/IUnifyWithObject cljs.core.logic/IUnifyWithNil cljs.core.logic/IUnifyWithLSeq cljs.core.logic/IUnifyTerms cljs.core/IMeta cljs.core.logic/IWalkTerm cljs.core.logic/IOccursCheckTerm cljs.core.logic/IReifyTerm cljs.core.logic/IUnifyWithLVar cljs.core.logic/Object cljs.core/IPrintWithWriter cljs.core.logic/IUnifyWithSequential cljs.core.logic/IUnifyWithMap cljs.core/IWithMeta}, :end-column 14, :end-line 210, :column 10, :line 210, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core.logic/IUnifyWithObject cljs.core.logic/IUnifyWithNil cljs.core.logic/IUnifyWithLSeq cljs.core.logic/IUnifyTerms cljs.core/IMeta cljs.core.logic/IWalkTerm cljs.core.logic/IOccursCheckTerm cljs.core.logic/IReifyTerm cljs.core.logic/IUnifyWithLVar cljs.core.logic/Object cljs.core/IPrintWithWriter cljs.core.logic/IUnifyWithSequential cljs.core.logic/IUnifyWithMap cljs.core/IWithMeta}, :name cljs.core.logic/->LVar, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 14, :method-params ([name meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 210, :end-line 210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name meta])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core/IWithMeta}, :test true}, PMap {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core.logic/IUnifyTerms cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core.logic/IWalkTerm cljs.core.logic/IUnifyWithLVar cljs.core/IPrintWithWriter cljs.core.logic/IUnifyWithMap cljs.core/IWithMeta cljs.core/IAssociative cljs.core.logic/IUnifyWithPMap cljs.core/IMap cljs.core/ILookup}, :name cljs.core.logic/PMap, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 16, :type true, :column 12, :internal-ctor true, :line 762, :record true, :end-line 762, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, resto {:protocol-inline nil, :meta {:arglists (quote ([l d])), :doc "A relation where l is a collection, such that d is the rest of l", :end-column 12, :end-line 727, :column 7, :line 727, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/resto, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 12, :method-params ([l d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 727, :end-line 727, :max-fixed-arity 2, :fn-var true, :arglists (quote ([l d])), :doc "A relation where l is a collection, such that d is the rest of l", :test true}, -lfirst {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol cljs.core.logic/LConsSeq, :end-column 11, :end-line 273, :column 4, :line 273, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/LConsSeq, :name cljs.core.logic/-lfirst, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 273, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, IUnifyTerms {:meta {:protocol-info {:methods {-unify-terms [[u v s]]}}, :protocol-symbol true, :doc nil, :end-column 25, :end-line 10, :column 14, :line 10, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IUnifyTerms, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 25, :column 1, :line 10, :protocol-info {:methods {-unify-terms [[u v s]]}}, :info nil, :end-line 10, :impls #{nil cljs.core/PersistentHashMap cljs.core/PersistentArrayMap cljs.core.logic/PMap default cljs.core.logic/LVar cljs.core.logic/LCons}, :doc nil, :test true}, mplus {:protocol-inline nil, :meta {:arglists (quote ([a f])), :end-column 12, :end-line 575, :column 7, :line 575, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/mplus, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 12, :method-params ([a f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 575, :end-line 575, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a f])), :test true}, Choice {:meta {:declared true, :end-column 16, :end-line 573, :column 10, :line 573, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :num-fields 2, :protocols #{cljs.core.logic/ITake cljs.core.logic/IBind cljs.core.logic/IMPlus}, :name cljs.core.logic/Choice, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 16, :type true, :column 10, :line 587, :record false, :declared true, :end-line 587, :skip-protocol-flag nil, :test true}, IUnifyWithPMap {:meta {:protocol-info {:methods {unify-with-pmap [[pmap u s]]}}, :protocol-symbol true, :doc nil, :end-column 28, :end-line 759, :column 14, :line 759, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IUnifyWithPMap, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 28, :column 1, :line 759, :protocol-info {:methods {unify-with-pmap [[pmap u s]]}}, :info nil, :end-line 759, :impls #{nil cljs.core/PersistentHashMap cljs/core.logic.LVar cljs.core/PersistentArrayMap cljs.core.logic/PMap default}, :doc nil, :test true}, ->Choice {:protocol-inline nil, :meta {:arglists (quote ([a f])), :factory :positional, :skip-protocol-flag nil, :protocols #{cljs.core.logic/ITake cljs.core.logic/IBind cljs.core.logic/IMPlus}, :end-column 16, :end-line 587, :column 10, :line 587, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocols #{cljs.core.logic/ITake cljs.core.logic/IBind cljs.core.logic/IMPlus}, :name cljs.core.logic/->Choice, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 16, :method-params ([a f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 587, :end-line 587, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a f])), :skip-protocol-flag nil, :test true}, -unify-with-seq {:protocol-inline nil, :meta {:arglists (quote ([v u s])), :doc nil, :protocol cljs.core.logic/IUnifyWithSequential, :end-column 19, :end-line 26, :column 4, :line 26, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IUnifyWithSequential, :name cljs.core.logic/-unify-with-seq, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 19, :method-params ([v u s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 26, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v u s])), :doc nil, :test true}, membero {:protocol-inline nil, :meta {:doc "A relation where l is a collection, such that l contains x", :end-column 15, :end-line 736, :column 8, :line 736, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/membero, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 15, :method-params ([x l]), :protocol-impl nil, :arglists-meta (), :column 1, :line 736, :end-line 736, :max-fixed-arity 2, :fn-var true, :arglists nil, :doc "A relation where l is a collection, such that l contains x", :test true}, -ifa {:protocol-inline nil, :meta {:arglists (quote ([b gs c])), :doc nil, :protocol cljs.core.logic/IIfA, :end-column 8, :end-line 648, :column 4, :line 648, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IIfA, :name cljs.core.logic/-ifa, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 8, :method-params ([b gs c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 647, :end-line 648, :max-fixed-arity 3, :fn-var true, :arglists (quote ([b gs c])), :doc nil, :test true}, lvar? {:meta {:declared true, :end-column 35, :end-line 99, :column 30, :line 99, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :line 99, :column 1, :end-line 99, :end-column 35, :declared true, :test true, :name cljs.core.logic/lvar?}, IIfA {:meta {:protocol-info {:methods {-ifa [[b gs c]]}}, :protocol-symbol true, :doc nil, :end-column 18, :end-line 647, :column 14, :line 647, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IIfA, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 18, :column 1, :line 647, :protocol-info {:methods {-ifa [[b gs c]]}}, :info nil, :end-line 647, :impls #{cljs.core.logic/Choice cljs.core.logic/Substitutions cljs.core.logic/Fail cljs.core.logic/Inc}, :doc nil, :test true}, ->PMap {:protocol-inline nil, :meta {:arglists (quote ([])), :factory :positional, :internal-ctor true, :end-column 16, :end-line 762, :column 12, :line 762, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/->PMap, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 762, :end-line 762, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, u# {:meta {:end-column 8, :end-line 642, :column 6, :line 642, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :line 642, :column 1, :end-line 642, :end-column 8, :test true, :name cljs.core.logic/u#}, to-s {:protocol-inline nil, :meta {:arglists (quote ([v])), :end-column 11, :end-line 201, :column 7, :line 201, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/to-s, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 11, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, prefix {:protocol-inline nil, :meta {:arglists (quote ([s <s])), :end-column 13, :end-line 751, :column 7, :line 751, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/prefix, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 13, :method-params ([s <s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 751, :end-line 751, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s <s])), :test true}, proc-lvar {:protocol-inline nil, :meta {:arglists (quote ([lvar-expr store])), :private true, :end-column 17, :end-line 831, :column 8, :line 831, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :private true, :name cljs.core.logic/proc-lvar, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 17, :method-params ([lvar-expr store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 831, :end-line 831, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lvar-expr store])), :test true}, prep {:protocol-inline nil, :meta {:arglists (quote ([expr])), :doc "Prep a quoted expression. All symbols preceded by ? will\n  be replaced with logic vars.", :end-column 11, :end-line 870, :column 7, :line 870, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/prep, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 11, :method-params ([expr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 870, :end-line 870, :max-fixed-arity 1, :fn-var true, :arglists (quote ([expr])), :doc "Prep a quoted expression. All symbols preceded by ? will\n  be replaced with logic vars.", :test true}, -unify-with-object {:protocol-inline nil, :meta {:arglists (quote ([v u s])), :doc nil, :protocol cljs.core.logic/IUnifyWithObject, :end-column 22, :end-line 17, :column 4, :line 17, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IUnifyWithObject, :name cljs.core.logic/-unify-with-object, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 22, :method-params ([v u s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v u s])), :doc nil, :test true}, IWalkTerm {:meta {:protocol-info {:methods {-walk-term [[v s]]}}, :protocol-symbol true, :doc nil, :end-column 23, :end-line 34, :column 14, :line 34, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IWalkTerm, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 23, :column 1, :line 34, :protocol-info {:methods {-walk-term [[v s]]}}, :info nil, :end-line 34, :impls #{nil cljs.core/PersistentHashMap cljs.core.logic/PMap default cljs.core/PersistentVector cljs.core.logic/LVar cljs.core.logic/LCons}, :doc nil, :test true}, conso {:protocol-inline nil, :meta {:arglists (quote ([a d l])), :doc "A relation where l is a collection, such that a is the first of l \n  and d is the rest of l", :end-column 12, :end-line 715, :column 7, :line 715, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/conso, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 12, :method-params ([a d l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 715, :end-line 715, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a d l])), :doc "A relation where l is a collection, such that a is the first of l \n  and d is the rest of l", :test true}, nilo {:protocol-inline nil, :meta {:arglists (quote ([a])), :doc "A relation where a is nil", :end-column 11, :end-line 705, :column 7, :line 705, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/nilo, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 11, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 705, :end-line 705, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :doc "A relation where a is nil", :test true}, -unify-with-lseq {:protocol-inline nil, :meta {:arglists (quote ([v u s])), :doc nil, :protocol cljs.core.logic/IUnifyWithLSeq, :end-column 20, :end-line 23, :column 4, :line 23, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IUnifyWithLSeq, :name cljs.core.logic/-unify-with-lseq, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 20, :method-params ([v u s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 23, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v u s])), :doc nil, :test true}, fail {:protocol-inline nil, :meta {:arglists (quote ([a])), :doc "A goal that always fails.", :end-column 11, :end-line 636, :column 7, :line 636, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/fail, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 11, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 636, :end-line 636, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :doc "A goal that always fails.", :test true}, -reify-lvar-name {:protocol-inline nil, :meta {:arglists (quote ([_])), :doc nil, :protocol cljs.core.logic/ISubstitutions, :end-column 20, :end-line 95, :column 4, :line 95, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/ISubstitutions, :name cljs.core.logic/-reify-lvar-name, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 20, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil, :test true}, -take* {:protocol-inline nil, :meta {:arglists (quote ([a])), :doc nil, :protocol cljs.core.logic/ITake, :end-column 10, :end-line 50, :column 4, :line 50, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/ITake, :name cljs.core.logic/-take*, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 10, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :doc nil, :test true}, IIfU {:meta {:protocol-info {:methods {-ifu [[b gs c]]}}, :protocol-symbol true, :doc nil, :end-column 18, :end-line 650, :column 14, :line 650, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IIfU, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 18, :column 1, :line 650, :protocol-info {:methods {-ifu [[b gs c]]}}, :info nil, :end-line 650, :impls #{cljs.core.logic/Choice cljs.core.logic/Substitutions cljs.core.logic/Fail cljs.core.logic/Inc}, :doc nil, :test true}, IUnifyWithLSeq {:meta {:protocol-info {:methods {-unify-with-lseq [[v u s]]}}, :protocol-symbol true, :doc nil, :end-column 28, :end-line 22, :column 14, :line 22, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IUnifyWithLSeq, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 28, :column 1, :line 22, :protocol-info {:methods {-unify-with-lseq [[v u s]]}}, :info nil, :end-line 22, :impls #{nil default cljs.core.logic/LVar cljs.core.logic/LCons}, :doc nil, :test true}, IUnifyWithObject {:meta {:protocol-info {:methods {-unify-with-object [[v u s]]}}, :protocol-symbol true, :doc nil, :end-column 30, :end-line 16, :column 14, :line 16, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IUnifyWithObject, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 30, :column 1, :line 16, :protocol-info {:methods {-unify-with-object [[v u s]]}}, :info nil, :end-line 16, :impls #{nil default cljs.core.logic/LVar cljs.core.logic/LCons}, :doc nil, :test true}, ->Inc {:protocol-inline nil, :meta {:arglists (quote ([f])), :factory :positional, :skip-protocol-flag #{cljs.core/IFn}, :protocols #{cljs.core.logic/ITake cljs.core/IFn cljs.core.logic/IBind cljs.core.logic/IMPlus}, :end-column 13, :end-line 604, :column 10, :line 604, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocols #{cljs.core.logic/ITake cljs.core/IFn cljs.core.logic/IBind cljs.core.logic/IMPlus}, :name cljs.core.logic/->Inc, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 13, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 604, :end-line 604, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :skip-protocol-flag #{cljs.core/IFn}, :test true}, IReifyTerm {:meta {:protocol-info {:methods {-reify-term [[v s]]}}, :protocol-symbol true, :doc nil, :end-column 24, :end-line 31, :column 14, :line 31, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IReifyTerm, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 24, :column 1, :line 31, :protocol-info {:methods {-reify-term [[v s]]}}, :info nil, :end-line 31, :impls #{nil default cljs.core.logic/LVar cljs.core.logic/LCons}, :doc nil, :test true}, not-found {:meta {:end-column 15, :end-line 475, :column 6, :line 475, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :line 475, :column 1, :end-line 475, :end-column 15, :test true, :name cljs.core.logic/not-found}, IUnifyWithNil {:meta {:protocol-info {:methods {-unify-with-nil [[v u s]]}}, :protocol-symbol true, :doc nil, :end-column 27, :end-line 13, :column 14, :line 13, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol-symbol true, :name cljs.core.logic/IUnifyWithNil, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 27, :column 1, :line 13, :protocol-info {:methods {-unify-with-nil [[v u s]]}}, :info nil, :end-line 13, :impls #{nil default cljs.core.logic/LVar cljs.core.logic/LCons}, :doc nil, :test true}, subst? {:protocol-inline nil, :meta {:arglists (quote ([x])), :tag boolean, :end-column 22, :end-line 198, :column 16, :line 198, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/subst?, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :ret-tag boolean, :end-line 198, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :test true}, firsto {:protocol-inline nil, :meta {:arglists (quote ([l a])), :doc "A relation where l is a collection, such that a is the first of l", :end-column 13, :end-line 721, :column 7, :line 721, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/firsto, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 13, :method-params ([l a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 721, :end-line 721, :max-fixed-arity 2, :fn-var true, :arglists (quote ([l a])), :doc "A relation where l is a collection, such that a is the first of l", :test true}, -bind {:protocol-inline nil, :meta {:arglists (quote ([this g])), :doc nil, :protocol cljs.core.logic/IBind, :end-column 9, :end-line 44, :column 4, :line 44, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IBind, :name cljs.core.logic/-bind, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 9, :method-params ([this g]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this g])), :doc nil, :test true}, -mplus {:protocol-inline nil, :meta {:arglists (quote ([a f])), :doc nil, :protocol cljs.core.logic/IMPlus, :end-column 10, :end-line 47, :column 4, :line 47, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :protocol cljs.core.logic/IMPlus, :name cljs.core.logic/-mplus, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 10, :method-params ([a f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a f])), :doc nil, :test true}, walk-term-map* {:protocol-inline nil, :meta {:arglists (quote ([v s])), :end-column 21, :end-line 526, :column 7, :line 526, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/walk-term-map*, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 21, :method-params ([v s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 526, :end-line 526, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v s])), :test true}, Substitutions {:num-fields 3, :protocols #{cljs.core.logic/ITake cljs.core/IEquiv cljs.core.logic/IBind cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core.logic/IMPlus cljs.core/IWithMeta cljs.core.logic/ISubstitutions}, :name cljs.core.logic/Substitutions, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 23, :type true, :column 10, :line 115, :record false, :end-line 115, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IMeta cljs.core/IPrintWithWriter cljs.core/IWithMeta}}, binding-map {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 2, :method-params ([u w]), :arglists ([u w] [u w & ts]), :arglists-meta (nil nil)}, :arglists (quote ([u w] [u w & ts])), :doc "Return the binding map that unifies terms u and w.\n  Will prep the terms.", :end-column 18, :end-line 924, :column 7, :line 924, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/binding-map, :variadic true, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([u w]), :arglists ([u w] [u w & ts]), :arglists-meta (nil nil)}, :method-params ([u w]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 924, :end-line 924, :max-fixed-arity 2, :fn-var true, :arglists ([u w] [u w & ts]), :doc "Return the binding map that unifies terms u and w.\n  Will prep the terms.", :test true}, succeed {:protocol-inline nil, :meta {:arglists (quote ([a])), :doc "A goal that always succeeds.", :end-column 14, :end-line 632, :column 7, :line 632, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/succeed, :variadic false, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 14, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 632, :end-line 632, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :doc "A goal that always succeeds.", :test true}, unifier* {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 2, :method-params ([u w]), :arglists ([u w] [u w & ts]), :arglists-meta (nil nil)}, :arglists (quote ([u w] [u w & ts])), :doc "Unify the terms u and w.", :end-column 15, :end-line 889, :column 7, :line 889, :file "C:\\Users\\Majka\\Documents\\GitHub\\marchingwestwards\\resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs"}, :name cljs.core.logic/unifier*, :variadic true, :file "resources\\public\\js\\compiled\\out\\cljs\\core\\logic.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([u w]), :arglists ([u w] [u w & ts]), :arglists-meta (nil nil)}, :method-params ([u w]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 889, :end-line 889, :max-fixed-arity 2, :fn-var true, :arglists ([u w] [u w & ts]), :doc "Unify the terms u and w.", :test true}}, :require-macros {cljs.core.logic cljs.core.logic, m cljs.core.logic}, :cljs.analyzer/constants {:order [:occurs-check :else :cljs.core.logic/not-found :lvars :db :n :reify-vars], :seen #{:reify-vars :else :db :n :cljs.core.logic/not-found :occurs-check :lvars}}, :doc nil}